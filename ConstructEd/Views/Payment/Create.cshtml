@model PaymentViewModel

@{
    ViewData["Title"] = "Make a Payment";
}

<!-- Button to Open the Modal -->
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#paymentModal">
    Make a Payment
</button>

<!-- Payment Modal -->
<div class="modal fade" id="paymentModal" tabindex="-1" aria-labelledby="paymentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="paymentModalLabel">Payment Form</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="ProcessPayment" method="post" id="paymentForm">
                    @Html.AntiForgeryToken()

                    <div class="mb-3">
                        <label asp-for="CardNumber" class="form-label"></label>
                        <input asp-for="CardNumber" class="form-control" type="tel" maxlength="19" placeholder="#### #### #### ####"
                               autocomplete="off" pattern="\d{4} \d{4} \d{4} \d{4}" required />
                        <span asp-validation-for="CardNumber" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="CardHolderName" class="form-label"></label>
                        <input asp-for="CardHolderName" class="form-control" type="text" autocomplete="name" required />
                        <span asp-validation-for="CardHolderName" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="ExpiryDate" class="form-label"></label>
                        <input asp-for="ExpiryDate" class="form-control" type="text" placeholder="MM/YY" maxlength="5"
                               autocomplete="off" pattern="\d{2}/\d{2}" required />
                        <span asp-validation-for="ExpiryDate" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="CVV" class="form-label"></label>
                        <input asp-for="CVV" class="form-control" type="password" maxlength="4"
                               autocomplete="off" pattern="\d{3,4}" required />
                        <span asp-validation-for="CVV" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Amount" class="form-label"></label>
                        <input asp-for="Amount" class="form-control" type="number" min="1" step="0.01" readonly /> <!-- Readonly to prevent manual input -->
                        <span asp-validation-for="Amount" class="text-danger"></span>
                    </div>

                    <button type="submit" class="btn btn-success">Submit Payment</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        $(document).ready(function () {
            // Format Card Number input
            $('#CardNumber').on('input', function () {
                let value = $(this).val().replace(/\D/g, ''); // Remove non-numeric characters
                value = value.replace(/(\d{4})/g, '$1 ').trim(); // Format into groups of 4
                $(this).val(value);
            });

            // Enforce MM/YY format in Expiry Date
            $('#ExpiryDate').on('input', function () {
                let value = $(this).val().replace(/\D/g, ''); // Remove non-numeric characters
                if (value.length >= 2) value = value.replace(/(\d{2})(\d{0,2})/, '$1/$2'); // Add '/' after 2 digits
                $(this).val(value);
            });

            // Expiry Date must be in the future
            $('#paymentForm').on('submit', function (event) {
                let expiry = $('#ExpiryDate').val();
                let currentYear = new Date().getFullYear() % 100; // Get last 2 digits of current year
                let currentMonth = new Date().getMonth() + 1; // JS months are 0-based

                if (expiry.length === 5) {
                    let [month, year] = expiry.split('/').map(Number);
                    if (year < currentYear || (year === currentYear && month < currentMonth)) {
                        alert("Expiry date must be in the future.");
                        event.preventDefault(); // Prevent form submission
                    }
                } else {
                    alert("Invalid expiry date format.");
                    event.preventDefault();
                }
            });
        });
    </script>
}
